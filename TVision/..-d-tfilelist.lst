       |module tfilelist;
       |
       |import std.path;
       |import std.file;
       |import std.algorithm;
       |
       |import tvision;
       |
       |private alias TSortedListBox!(DirEntry) Parent;
       |
       |string DirEntryToString(in DirEntry entry) {
0000000|        return baseName(entry.name);
       |}
       |
       |class TFileList : Parent {
       |
0000000|        this(in TRect bounds, TScrollBar aScrollBar) {
0000000|                super(bounds, 2, aScrollBar);
0000000|                setNumCols(1);
       |        }
       |
       |        override void focusItem( ccIndex item ) {
0000000|                Parent.focusItem( item );
0000000|                message( owner, evBroadcast, cm.FileFocused, &items[item] );
       |        }
       |
       |        override void selectItem( ccIndex item ) {
0000000|                message( owner, evBroadcast, cm.FileDoubleClicked, &items[item] );
       |        }
       |
       |        override void getData( void * ) {
       |        }
       |
       |        override void setData( void * ) {
       |        }
       |
       |        override uint dataSize() {
0000000|          return 0;
       |        }
       |
       |        override void* getKey( string s ) {
0000000|                return cast(void *)s.ptr;
       |        }
       |
       |        override void handleEvent( ref TEvent event ) {
0000000|                Parent.handleEvent( event );
0000000|                if( event.what == evKeyDown ) {
0000000|                        if( event.keyDown.keyCode == KeyCode.kbLeft ) {
0000000|                                clearEvent( event );
       |                                /* Move to .. */ 
0000000|                                auto entry = &items[0]; 
0000000|                                message( owner, evBroadcast, cm.FileFocused, entry );
0000000|                                message( owner, evBroadcast, cm.FileDoubleClicked, entry );
0000000|                        } else if( event.keyDown.keyCode == KeyCode.kbRight ) {
0000000|                                clearEvent( event );
       |                                /* Enter dir */
0000000|                                DirEntry* tp = &items[focused];
0000000|                                if( tp.isDir )
0000000|                                        message( owner, evBroadcast, cm.FileDoubleClicked, tp );
       |                        }
       |                }
       |        }
       |
       |        override void setState( ushort aState, bool enable ) {
0000000|                Parent.setState( aState, enable );
0000000|                if ( aState == sfFocused && enable ) {
0000000|                        message( owner, evBroadcast, cm.FileFocused, &items[focused] );
       |                }
       |        }
       |        /******** end of struct DirSearchRec ********/
       |
       |
       |        // SET: Helper routine to exclude some special files
       |        /*static
       |        int ExcludeSpecialName(string name) {
       |                int len=strlen(name);
       |                if ((TFileCollection.sortOptions & fcolHideEndTilde) && name[len-1]=='~')
       |                        return 1;
       |                if ((TFileCollection.sortOptions & fcolHideEndBkp) && len>4 &&
       |                        strcasecmp(name+len-4,".bkp")==0)
       |                        return 1;
       |                if ((TFileCollection.sortOptions & fcolHideStartDot) && name[0]=='.')
       |                        return 1;
       |                return 0;
       |        }*/
       |
       |        // Win32+MingW
       |        void readDirectory(string dir, string pattern) {
0000000|                DirEntry[] fileList;
       |          
       |          // find all dirs
0000000|                fileList.add(DirEntry(buildNormalizedPath(dir, "..")));
0000000|                auto entries = dirEntries(dir, pattern, SpanMode.shallow);
0000000|                foreach(DirEntry e; entries) {
0000000|                fileList.add(e);
       |                }
       |
0000000|                newList(fileList);
0000000|                if (items.length > 0)
0000000|                        message( owner, evBroadcast, cm.FileFocused, &items[0] );
       |                else {
0000000|                        message( owner, evBroadcast, cm.FileFocused, null );
       |                }
       |        }
       |
       |        
       |}
..\d\tfilelist.d is 0% covered
